services:
  postgres-users:
    image: postgres
    environment:
      POSTGRES_DB: "users"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password 
    ports:
      - 5432:5432
    volumes:
      - stackup_postgres_data:/var/lib/postgresql/data/
    networks:
      - my-network

  elasticsearch:
    container_name: elasticsearch
    image: cr.yandex/crp92lg5cv6m42bunkmg/elasticsearch
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      
  kibana:
    container_name: kibana
    image: cr.yandex/crp92lg5cv6m42bunkmg/kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: elasticsearch:9200
  
  service-discovery:
    image: cr.yandex/crp92lg5cv6m42bunkmg/service-dicovery:last
    container_name: service-discovery
    environment:
      - "ASPNETCORE_ENVIRONMENT=Release"
      - "SWAGGER_REQUESTS_PREFIX=sd" # from nginx prefixes
    ports:
      - 8888:8080
    depends_on:
      - elasticsearch
    networks:
      - my-network

  abstract-task-service:
    image: cr.yandex/crp92lg5cv6m42bunkmg/abstract-task-service:last
    container_name: abstract-task-service
    environment:
      - "ASPNETCORE_ENVIRONMENT=Release"
      - "HOST=http://abstract-task-service:8080"
      - "SD_HOST=http://service-discovery:8080"
      - "SWAGGER_REQUESTS_PREFIX=tasks" # from nginx prefixes
    ports:
      - 7778:8080
    depends_on:
      - service-discovery
    networks:
      - my-network

  users:
    image: cr.yandex/crp92lg5cv6m42bunkmg/users:last
    container_name: users
    environment:
      - "ASPNETCORE_ENVIRONMENT=Release"
      - "HOST=http://users:8080"
      - "SD_HOST=http://service-discovery:8080"
      - "SWAGGER_REQUESTS_PREFIX=users" # from nginx prefixes
      - "DB_CONNECTION_STRING=host=postgres-users;Port=5432;Database=users;User Id=postgres;Password=password"
    ports:
      - 6666:8080
    depends_on:
      - service-discovery
      - postgres-users
    networks:
      - my-network


  api-gateway:
    image: cr.yandex/crp92lg5cv6m42bunkmg/api-gateway:last
    container_name: api-gateway
    environment:
      - "ASPNETCORE_ENVIRONMENT=Release"
      - "HOST=http://api-gateway:8080"
      - "SD_HOST=http://service-discovery:8080"
    ports:
      - 7777:8080
    depends_on:
      - service-discovery
    networks:
      - my-network


  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - service-discovery
      - abstract-task-service
      - users
      - api-gateway
    networks:
      - my-network


volumes:
  stackup_postgres_data:
  elasticsearch_data:

networks:
  my-network:
    driver: bridge